from typing import Union
from pydantic import BaseModel


class {{ model.name }}Base(BaseModel):
{%- for attrib in model.attributs -%}
{%- if attrib.required %}
    {{attrib.name.lower()}}: {{attrib.type}}
{%- endif -%}
{%- endfor %}


class {{ model.name }}Create({{ model.name }}Base):
{%- for attrib in model.attributs %}
{%- if not attrib.required %}
    {{attrib.name.lower()}}: Union[{{attrib.type}}, None] = None
{%- endif -%}
{%- endfor %}


class Update{{ model.name }}({{ model.name }}Base):
    id: int
{%- for attrib in model.attributs %}
{%- if not attrib.required %}
    {{attrib.name.lower()}}: Union[{{attrib.type}}, None] = None
{%- endif -%}
{% endfor %}

    class Config:
        orm_mode = True
